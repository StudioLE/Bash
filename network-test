#!/bin/bash
set -uo pipefail

SUCCESS="TRUE"

echo-success () {
  echo -ne "\e[32m ✔  $1\e[0m"
}

echo-information () {
  echo -ne "\e[34m ⓘ  $1\e[0m"
}

echo-error () {
  echo -ne "\e[31m !  $1\e[0m"
}

echo-warning () {
  echo -ne "\e[33m ⚠  $1\e[0m"
}

echo-subsidiary () {
  echo -ne "\e[37m    $1\e[0m"
}

echo-step () {
  echo-break
  echo -ne "\e[37m$1\e[0m"
}

echo-break () {
  echo ""
}

echo-step "IPv4 Ping     "
if ping 1.1.1.1 -4 -c 1 -q -w 1 > /dev/null
then
  echo-success "Succeeded"
else
  echo-error "Failed   "
  SUCCESS=""
fi

echo-step "IPv6 Ping     "
if ping 2606:4700:4700::1111 -6 -c 1 -q -w 1 > /dev/null
then
  echo-success "Succeeded"
else
  echo-error "Failed   "
  SUCCESS=""
fi

echo-step "IPv4 DNS      "
if ping one.one.one.one -4 -c 1 -q -w 1 > /dev/null
then
  echo-success "Succeeded"
else
  echo-error "Failed   "
  SUCCESS=""
fi

echo-step "IPv6 DNS      "
if ping one.one.one.one -6 -c 1 -q -w 1 > /dev/null
then
  echo-success "Succeeded"
else
  echo-error "Failed   "
  SUCCESS=""
fi

echo-step "IPv4 Address  "
IPv4=$(curl ipinfo.io/ip -4 --connect-timeout 1 --silent)
if [[ $? == 0 ]]
then
  echo-success "Succeeded"
  echo-subsidiary "${IPv4}"
else
  echo-error "Failed   "
  SUCCESS=""
fi

echo-step "IPv6 Address  "
IPv6=$(curl v6.ipinfo.io/ip -6 --connect-timeout 1 --silent)
if [[ $? == 0 ]]
then
  echo-success "Succeeded"
  echo-subsidiary "${IPv6}"
else
  echo-error "Failed   "
  SUCCESS=""
fi

echo-break

if [[ "${SUCCESS}" == "" ]]
then
  exit 1
fi
